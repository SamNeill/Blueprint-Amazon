apply plugin: 'maven-publish'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                if (project.plugins.findPlugin("com.android.library")) {
                    artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                } else {
                    artifact("$buildDir/libs/${project.getName()}-${version}.jar")
                }

                artifact androidSourcesJar

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Android library for icons packs'
                    url = 'https://github.com/jahirfiquitiva/Blueprint'
                    licenses {
                        license {
                            name = 'License'
                            url = 'https://github.com/jahirfiquitiva/Blueprint/blob/sample/LICENSE.md'
                        }
                    }
                    developers {
                        developer {
                            id = 'jahirfiquitiva'
                            name = 'Jahir Fiquitiva'
                            email = 'hola@jahir.dev'
                        }
                        // Other devs...
                    }
                    scm {
                        connection = 'scm:git:github.com/jahirfiquitiva/Blueprint.git'
                        developerConnection = 'scm:git:ssh://github.com/jahirfiquitiva/Blueprint.git'
                        url = 'https://github.com/jahirfiquitiva/Blueprint/tree/master'
                    }
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')

                        project.configurations.implementation.allDependencies.each {
                            if (it == null) return
                            if (it.group == null) return
                            if (it.name == null) return
                            if (it.name == 'unspecified') return
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "sonatype"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            packageGroup = PUBLISH_GROUP_ID
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
        }
    }
}
